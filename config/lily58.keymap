/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&lt {
	flavor = "tap-preferred";
	quick-tap-ms = <125>;
	global-quick-tap;
	retro-tap;
};

/ {
	 macros {
        macro_sl1: macro_sl1 {
            label = "MACRO_SHIFT_LAYER_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 1 &kp LSHFT>
                , <&macro_pause_for_release>
                , <&macro_release &mo 1 &kp LSHFT>
						;
			};
	};

	behaviors {
			td_gll: tap_dance_gui_left_layer {
					compatible = "zmk,behavior-tap-dance";
					label = "TAP_DANCE_GUI_LEFT_LAYER";
					#binding-cells = <0>;
					tapping-term-ms = <200>;
					bindings = <&kp LGUI>, <&mo 1>, <&macro_sl1>;
			};

			td_grl: tap_dance_gui_right_layer {
					compatible = "zmk,behavior-tap-dance";
					label = "TAP_DANCE_GUI_RIGHT_LAYER";
					#binding-cells = <0>;
					tapping-term-ms = <200>;
					bindings = <&kp RGUI>, <&mo 2>;
			};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			// ------------------------------------------------------------------------------------------------------------
			// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
			// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
			// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
			// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
			//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
			bindings = <
        &kp GRAVE   &kp N1     &kp N2    &kp N3      &kp N4      &kp N5    &kp N6     &kp N7   &kp N8   &kp N9   &kp N0      &kp BSPC
        &kp TAB     &kp Q      &kp W     &kp E       &kp R       &kp T     &kp Y      &kp U    &kp I    &kp O    &kp P       &kp BSLH
        &kp ESC     &kp A      &kp S     &kp D       &kp F       &kp G     &kp H      &kp J    &kp K    &kp L    &kp SEMI    &kp SQT
        &kp LSHFT   &kp Z      &kp X     &kp C       &kp V       &kp B     &mo 1      &mo 2    &kp N    &kp M    &kp COMMA   &kp DOT   &kp FSLH   &mt RSHFT RET
        &kp LCTRL   &kp LALT   &td_gll   &kp SPACE   &kp SPACE   &td_grl   &kp RALT   &kp RCTRL
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {
			// ------------------------------------------------------------------------------------------------------------
			// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
			// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
			// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
			// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
			//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
        &trans       &kp F1             &kp F2              &kp F3              &kp F4         &kp F5         &kp F6       &kp F7         &kp F8         &kp F9       &kp F10            &kp DEL
        &trans       &bt BT_SEL 0       &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3   &bt BT_SEL 4   &kp C_PREV   &kp C_VOL_DN   &kp C_VOL_UP   &kp C_NEXT   &kp C_PLAY_PAUSE   &none
        &bt BT_CLR   &none              &none               &none               &none          &none          &none        &kp LBKT       &kp RBKT       &kp MINUS    &kp EQUAL          &none
        &trans       &ext_power EP_ON   &ext_power EP_OFF   &ext_power EP_TOG   &none          &none          &none        &none          &none          &none        &none              &none   &none   &trans
        &trans       &trans             &trans              &kp UNDER           &kp UNDER      &trans         &trans       &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		raise_layer {
			// ------------------------------------------------------------------------------------------------------------
			// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
			// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
			// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
			// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
			//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
        &trans     &trans   &trans   &trans      &trans      &trans   &trans       &trans         &trans         &trans       &trans             &trans
        &trans     &none    &none    &none       &none       &none    &kp C_PREV   &kp C_VOL_DN   &kp C_VOL_UP   &kp C_NEXT   &kp C_PLAY_PAUSE   &none
        &trans     &none    &none    &none       &none       &none    &kp LEFT     &kp DOWN       &kp UP         &kp RIGHT    &none              &none
        &kp CAPS   &none    &none    &none       &none       &none    &none        &none          &none          &none        &none              &none   &none   &trans
        &trans     &trans   &trans   &kp UNDER   &kp UNDER   &trans   &trans       &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
